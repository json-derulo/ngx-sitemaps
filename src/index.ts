import fs from "node:fs/promises";
import path from "node:path";
import { create } from "xmlbuilder2";

/** Options for the sitemap generation. */
export interface SitemapOptions {
	/**
	 * Project name in angular.json.
	 * If not specified, the first project will be used.
	 */
	project?: string;
}

/**
 * Generates a sitemap.xml file for an Angular project.
 * The script will read the `prerendered-routes.json` file generated by the Angular CLI.
 * So make sure that before running this script, you have run `ng build`.
 *
 * @param baseUrl Absolute base URL of the site
 * @param project Project name in angular.json
 */
export async function generateSitemap(baseUrl: string, { project }: SitemapOptions = {}) {
	if (!project) {
		const configLocation = path.join(process.cwd(), "angular.json");
		const config = JSON.parse(await fs.readFile(configLocation, "utf-8"));
		project = Object.keys(config.projects).at(0);
	}

	if (!project) {
		console.error("No project found in angular.json");
		process.exit(1);
	}

	const prerenderedRoutesPath = path.join(process.cwd(), "dist", project, "prerendered-routes.json");
	const { routes } = JSON.parse(await fs.readFile(prerenderedRoutesPath, "utf-8"));
	const root = create({ version: "1.0", encoding: "UTF-8" });
	const urls = root.ele("urlset").att("xmlns", "http://www.sitemaps.org/schemas/sitemap/0.9");
	for (const path in routes) {
		const url = baseUrl + (path.endsWith("/") ? path : path + "/");
		urls.ele("url").ele("loc").txt(url).up();
	}
	const xml = root.end({ prettyPrint: true });
	const outputPath = path.join(process.cwd(), "dist", project, "browser", "sitemap.xml");

	await fs.writeFile(outputPath, xml);
}
